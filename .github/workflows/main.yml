name: Android CI with Maven

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: macos-13
    env:
      ANDROID_HOME: /Users/runner/Library/Android/sdk
      PATH: ${{ env.PATH }}:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/emulator:$ANDROID_HOME/platform-tools

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Appium
        run: |
          npm install -g appium
          appium --version

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install Emulator and Tools
        run: |
          sdkmanager --install "emulator" "platform-tools" "platforms;android-29" "system-images;android-29;google_apis;arm64-v8a"
          yes | sdkmanager --licenses

      - name: Create AVDs
        run: |
          echo "no" | avdmanager create avd -n emulator1 -k "system-images;android-29;google_apis;arm64-v8a" --force
          echo "no" | avdmanager create avd -n emulator2 -k "system-images;android-29;google_apis;arm64-v8a" --force

      - name: Start Emulators
        run: |
          echo "Starting first emulator..."
          $ANDROID_HOME/emulator/emulator -avd emulator1 -no-window -no-audio -no-boot-anim -no-snapshot-load &
          echo "Starting second emulator..."
          $ANDROID_HOME/emulator/emulator -avd emulator2 -no-window -no-audio -no-boot-anim -no-snapshot-load &

          echo "Waiting for emulators to boot..."
          adb -s emulator-5554 wait-for-device
          adb -s emulator-5556 wait-for-device

          for device in emulator-5554 emulator-5556; do
            until adb -s $device shell getprop sys.boot_completed | grep "1"; do
              echo "Waiting for $device boot completion..."
              sleep 5
            done
            echo "$device is ready"
            adb -s $device shell input keyevent 82
          done

          sleep 30  # Ensure the emulator is fully booted

      - name: Start Appium Server
        run: |
          appium &

          while ! curl -s http://localhost:4723/wd/hub/status | grep '"state":"running"'; do
            echo "Waiting for Appium to start..."
            sleep 1
          done

      - name: Run Tests on APK
        run: mvn test







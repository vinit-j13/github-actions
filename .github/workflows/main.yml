name: Android CI with Maven

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: macos-13
    env:
      ANDROID_HOME: /Users/runner/Library/Android/sdk
      PATH: $PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator
      
    steps:
      # Step 1: Checkout the code from the repository
      - uses: actions/checkout@v4
      
      # Step 2: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      # Step 3: Install Appium
      - name: Install Appium
        run: |
          npm install -g appium
          appium --version
          
      # Step 4: Setup Android SDK
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        
      # Step 5: Cache Maven packages
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
    
      # Step 6: Restart ADB Server
      - name: Restart ADB Server
        run: |
          adb kill-server || true # Ignore if ADB is not running
      
      # Step 7: List Available System Images (for debugging)
      - name: List Available System Images
        run: sdkmanager --list

      # Step 8: Install Required System Image
      - name: Install Required System Image
        run: sdkmanager "system-images;android-29;google_apis;x86_64"

      # Step 9: Install Emulator and Tools
      - name: Install Emulator and Tools
        run: |
          sdkmanager --install "emulator" "platform-tools" "platforms;android-29" "system-images;android-29;google_apis;x86_64"
          yes | sdkmanager --licenses
  
      # Step 10: Create AVDs
      - name: Create AVDs
        run: |
          echo "Creating first AVD..."
          echo "no" | avdmanager create avd -n emulator1 -k "system-images;android-29;google_apis;x86_64" --force
          echo "Creating second AVD..."
          echo "no" | avdmanager create avd -n emulator2 -k "system-images;android-29;google_apis;x86_64" --force
      
      # Step 11: Start Emulators
      - name: Start Emulators
        run: |
          echo "Starting first emulator..."
          $ANDROID_HOME/emulator/emulator -avd emulator1 -no-window -no-audio -no-boot-anim &
          echo "Starting second emulator..."
          $ANDROID_HOME/emulator/emulator -avd emulator2 -no-window -no-audio -no-boot-anim &
          
          echo "Waiting for emulators to boot..."
          adb wait-for-device
          
          # Wait for both emulators to be fully booted
          while [[ -z $(adb devices | grep "emulator-") ]]; do
            echo "Waiting for emulators..."
            sleep 10
          done
          
          # Wait for system boot completion
          for device in $(adb devices | grep "emulator-" | cut -f1); do
            while [[ $(adb -s $device shell getprop sys.boot_completed) != "1" ]]; do
              echo "Waiting for $device boot completion..."
              sleep 5
            done
            echo "$device is ready"
            adb -s $device shell input keyevent 82
          done
          
          echo "Both emulators are ready."
          
          echo "Starting Appium Server..."
          appium & sleep 5
          
          echo "Running Tests on apk"
          mvn test
